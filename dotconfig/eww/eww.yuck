(defwindow statusbar
    :monitor 0
    :geometry (geometry
        :x "0%"
        :y "0%"
        :width "100%"
        :height "10px"
        :anchor "top center"
    )
    :stacking "overlay"
    :exclusive true
    :focusable false
    :namespace "ewwStatusBar"

    (bar)
)

(defwidget bar []
    (centerbox
        :orientation "horizontal"

        (left)
        (center)
        (right)
    )
)

(defwidget left []
    (box
        :halign "start"
        :orientation "horizontal"
        :space-evenly false
        :spacing 6

        (button
            :onclick "bash ./scripts/open-hyprlock.sh"
            ""
        )   
        (clock)
        ; (window_w)
        ; "submap"
    )
)

(defwidget center []
    (box
        :halign "center"
        :orientation "horizontal"
        :space-evenly false
        :spacing 6

        (workspaces)
    )
)

(defwidget right []
    (box
        :halign "end"
        :orientation "horizontal"
        :space-evenly false
        :spacing 6

        "注"
        
        (audio)
        (box        
            ""
            ;"${EWW_CPU}"
            ""
            ;"${EWW_RAM}"
            ;"${EWW_TEMPS}"
        )
        ""
        (power)
        ""
    )
)

(defpoll time
    :interval "1s"
    :run-while true

    `date +"%l:%M %p"`
)
(defwidget clock []
    "${time}"
)

(deflisten workspaces
    :initial "[]" 

    "bash ~/.config/eww/scripts/get-workspaces"
)
(deflisten current_workspace
    :initial "1"

    "bash ~/.config/eww/scripts/get-active-workspace"
)
(defwidget workspaces []
    (eventbox 
        :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}"
        :class "workspaces-widget"
        (box :space-evenly true
            (label 
                :text "${workspaces}${current_workspace}" 
                :visible false
            )
            (for workspace in workspaces
                (eventbox 
                    :onclick "hyprctl dispatch workspace ${workspace.id}"

                    (box 
                        :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
                        
                        (label 
                            :text "${workspace.id}"
                        )
                    )
                )
            )
        )
    )
)

(deflisten window 
    :initial "..." 
    
    "sh ~/.config/eww/scripts/get-window-title"
)
(defwidget window_w []
    (box
        (label 
            :text "${window}"
        )
    )
)

(include "./yuck/power.yuck")
(include "./yuck/audio.yuck")